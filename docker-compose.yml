version: '3.9'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: tms_web
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./app:/app:ro
      - ./app/requirements.txt:/app/requirements.txt:ro
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:15-alpine
    container_name: tms_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tmsdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tmsdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: tms_redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery_worker:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: tms_celery_worker
    command: celery -A celery_app.tasks worker --loglevel=info
    volumes:
      - ./app:/app:ro
      - ./app/requirements.txt:/app/requirements.txt:ro
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: tms_celery_beat
    command: celery -A celery_app.tasks beat --loglevel=info
    volumes:
      - ./app:/app:ro
      - ./app/requirements.txt:/app/requirements.txt:ro
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  pgdata:
